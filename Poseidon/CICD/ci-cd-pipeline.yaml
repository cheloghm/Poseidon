---
name: "CI/CD Pipeline"

on:
  push:
    branches:
      - "main"
      - "dev"

jobs:
  build:
    name: Build Docker Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_HUB_USERNAME }}/poseidon-api:dev .
          docker push ${{ secrets.DOCKER_HUB_USERNAME }}/poseidon-api:dev

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Run Unit Tests
        run: |
          docker run --rm ${{ secrets.DOCKER_HUB_USERNAME }}/poseidon-api:dev \
          dotnet test /src/Poseidon.Tests/Poseidon.Tests.csproj --no-build

  security_scan:
    name: Run Security Scan
    runs-on: ubuntu-latest
    needs: build
    container:
      image: aquasec/trivy:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Run vulnerability scan
        run: |
          trivy image --severity CRITICAL --exit-code 1 \
          ${{ secrets.DOCKER_HUB_USERNAME }}/poseidon-api:dev

  deploy_dev:
    name: Deploy to Dev Environment
    runs-on: ubuntu-latest
    needs: security_scan

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1

      - name: Deploy to Kubernetes (Dev)
        run: |
          kubectl apply -f k8s/Deployment.yml
          kubectl apply -f k8s/Service.yml

  manual_approval:
    name: Manual Approval for Production
    runs-on: ubuntu-latest
    needs: deploy_dev
    if: github.ref == 'refs/heads/dev'

    steps:
      - name: Await Approval
        run: |
          echo "Approve this deployment to Prod?"

  deploy_prod:
    name: Deploy to Production Environment
    runs-on: ubuntu-latest
    needs: manual_approval
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Kubectl
        uses: azure/setup-kubectl@v1

      - name: Deploy to Kubernetes (Prod)
        run: |
          kubectl apply -f k8s/Deployment.yml
          kubectl apply -f k8s/Service.yml
