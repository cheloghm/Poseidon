version: '3.8'
services:
  mongodb:
    image: mongo:latest
    container_name: poseidon_mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB_NAME}
      ENVIRONMENT: docker-compose
    volumes:
      - ./data/db:/data/db
    ports:
      - "27017:27017"
    healthcheck:
      test: "mongosh --eval 'db.adminCommand(\"ping\")'"
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - poseidon-net

  poseidon-api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: poseidon_api
    ports:
      - "9090:8080"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      DatabaseConfig__ConnectionStringDocker: ${DatabaseConfig__ConnectionStringDocker}
      DatabaseConfig__DatabaseName: ${DatabaseConfig__DatabaseName}
      # JWT configuration using the same variable names as in .env
      Jwt__Key: ${Jwt__Key}
      Jwt__Issuer: ${Jwt__Issuer}
      Jwt__Audience: ${Jwt__Audience}
    depends_on:
      - mongodb
    networks:
      - poseidon-net

  mongodb-seeder:
    image: mongo:latest
    container_name: mongo-seeder
    depends_on:
      - mongodb
    volumes:
      - ./Mongo-seed:/mongo-seed
    entrypoint: ["/bin/bash", "/mongo-seed/init-mongo.sh"]
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      MONGO_DB_NAME: ${MONGO_DB_NAME}
      ENVIRONMENT: docker-compose
    networks:
      - poseidon-net
    restart: "no"

networks:
  poseidon-net:
